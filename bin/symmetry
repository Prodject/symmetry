#!/usr/bin/env bash
source $HOME/.symmetry/functions/._symmetry.bash || exit 2;

SYMMETRY_VERSION='0.0.1';
SYMMETRY_AUTHOR='Ryan Conrad';
SYMMETRY_PLATFORM=$(dotfiles_platform);

__print_help() {
	echo -e "Symmetry v$SYMMETRY_VERSION";
	echo -e "Copyright (c) $SYMMETRY_AUTHOR 2017. All Rights Reserved.\n\n";
	echo "Usage: $0 [command] [args]";
	echo -e "Commands:\n\t--help: This message\n\t--version: Get symmetry version info";
	echo -e "\n\t install: execute the system install";
	echo -e "\t init: execute the system initialization";
}

__process_commands() {
	case "$1" in
		--version)
			echo "Symmetry v$SYMMETRY_VERSION";
			shift;
		;;
		install)
			__execute_init;
			__execute_install "${@:2}";
			shift;
		;;
		init)
			__execute_init "${@:2}";
			shift;
		;;
		set-prompt)
			load_prompt "${@:2}";
			exec $SHELL;
			shift;
			;;
		*)
			__print_help;
			shift;
		;;
	esac
}

__execute_install() {
	if [ $# -eq 0 ]; then
		if [ -f "$HOME/.symmetry/installs/system.${SYMMETRY_PLATFORM}.bash" ]; then
			# source the specific system install file
			source $HOME/.symmetry/installs/system.${SYMMETRY_PLATFORM}.bash;
		fi
	else
		if [ -f "$HOME/.symmetry/installs/$1.bash" ]; then
			source $HOME/.symmetry/installs/$1.bash;
		fi
	fi
}

__execute_init() {
	if [ $# -eq 0 ]; then
		if [ -f "$HOME/.symmetry/initializers/system.bash" ]; then
			source $HOME/.symmetry/initializers/system.bash;
		else
			echo "NOPE"
		fi
	else
		echo "$#";
	fi
}

if [ $# -eq 0 ]; then
	__print_help;
else
	__process_commands $*
fi

unset SYMMETRY_VERSION
unset SYMMETRY_PLATFORM;
unset SYMMETRY_AUTHOR;
